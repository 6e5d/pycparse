[
[S
	[+ defun]
]
[defun
	[defun declare procedure]
]
[dparams
	[dparams. declare]
	[dparams declare "," dparams]
]
[declare
	[declare var dbody]
]
[dbody
	[+ dbody2]
	[ptr "Deref" dbody2]
]
[dbody2
	[+ dbody3]
	[fun dbody3 "(" dparams ")"]
]
[dbody3
	[+ var]
	[paren "(" dbody ")"]
]
[procedure
	[begin "{" stmts "}"]
]
[stmts
	[stmts. stmt]
	[stmts stmt stmts]
]
[stmt
	[+ expr ";"]
]
[expr
	[+ expr14]
]
[expr14
	[+ expr12]
	[assign expr14 "Assign" expr12]
]
[expr12
	[+ expr4]
]
[expr4
	[+ expr3]
	[add expr4 "Add" expr3]
]
[expr3
	[+ expr2]
	[mul expr3 "Mul" expr2]
]
[expr2
	[+ expr1]
	[prefix expr2 "Prefix" expr1]
]
[expr1
	[+ lit]
	[paren "(" expr ")"]
	[index expr1 "[" expr "]"]
	[call expr1 "(" params ")"]
	[member expr1 "Member" var]
]
[params
	[params. expr]
	[params expr "," params]
]
[lit
	[+ clit]
	[+ var]
]
[clit
	[. "Num"]
	[str "Str"]
	[char "Char"]
]
[var
	[. "Var"]
]
]
